/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package assistimport;

import static assistimport.Holder.stmt;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Desktop;
import java.awt.Dialog;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import static java.lang.Math.abs;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.JPanel;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.SwingWorker.StateValue;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Christo
 *
 */
public class Application extends javax.swing.JFrame {

    //private Action searchCancelAction;
    /**
     * Creates new form Application
     */
    public Application() {
        //initActions();
        // Create a new empty document
//PDDocument document = new PDDocument();
        initComponents();
        init_makeFolders();

        init_Combo_with_Server_Details();
        init_DataBase();
        init_Combo_with_Group_Details();
        init_type_of_File();
        init_validity_of_header();
        /*
         * InetAddress class is used here to get the IP address of the Host Machine
        
         */
        InetAddress Location = null;
        try {

            Location = InetAddress.getLocalHost();
            System.out.println("Current IP address : " + Location.getHostAddress());

        } catch (UnknownHostException e) {

            e.printStackTrace();

        }
        // Set Location of the title bar as the IP address of the host machine.
        setTitle("Assist Import Version: " + Holder.vers + "Loc: " + Location.toString());
    }

    private void cancel() {
        Holder.doaAalyse.cancel(true);
    }
//  private void initActions() {
//    browseAction = new AbstractAction("Browse") {
//
//      private static final long Holder.serialVersionUID = 4669650683189592364L;
//
//      @Override
//      public void actionPerformed(final ActionEvent e) {
//        final File dir = new File(directoryPathTextField.getText()).getAbsoluteFile();
//        final JFileChooser fileChooser = new JFileChooser(dir.getParentFile());
//        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
//        final int option = fileChooser.showOpenDialog(Application.this);
//        if (option == JFileChooser.APPROVE_OPTION) {
//          final File selected = fileChooser.getSelectedFile();
//          directoryPathTextField.setText(selected.getAbsolutePath());
//        }
//      }
//    };
//
//    searchCancelAction = new AbstractAction("Search") {
//
//      private static final long Holder.serialVersionUID = 4669650683189592364L;
//
//      @Override
//      public void actionPerformed(final ActionEvent e) {
//        if (searchWorker == null) {
//          search();
//        } else {
//          cancel();
//        }
//      }
//    };
//  }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel11 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblSelectFile = new javax.swing.JLabel();
        txtSelectFile = new javax.swing.JTextField();
        btnBrowse = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        messagesTextArea = new javax.swing.JTextArea();
        searchProgressBar = new javax.swing.JProgressBar();
        jPanel5 = new javax.swing.JPanel();
        cboCompany = new javax.swing.JComboBox();
        cboSelectBranch = new javax.swing.JComboBox();
        lblSelectBranch = new javax.swing.JLabel();
        lblSelectCompany = new javax.swing.JLabel();
        lblInseptionDate = new javax.swing.JLabel();
        jXIDatePicker = new org.jdesktop.swingx.JXDatePicker();
        jPanel6 = new javax.swing.JPanel();
        btnClose = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnRun = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        btnCSVfile = new javax.swing.JButton();
        btnPDFfile = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        lblServerConnect = new javax.swing.JLabel();
        cboServer_to_Connect = new javax.swing.JComboBox();
        jPanel10 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        btnCash = new javax.swing.JButton();
        btnDebit = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        btnViewDataInTables = new javax.swing.JButton();
        btnReportHistory = new javax.swing.JButton();
        lblLiveReport = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AssistImport");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblSelectFile.setText("Select CSV file ");

        txtSelectFile.setEditable(false);
        txtSelectFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSelectFileActionPerformed(evt);
            }
        });

        btnBrowse.setText("Browse");
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSelectFile)
                .addGap(16, 16, 16)
                .addComponent(txtSelectFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBrowse)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSelectFile)
                    .addComponent(txtSelectFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBrowse))
                .addContainerGap())
        );

        txtSelectFile.getAccessibleContext().setAccessibleName("");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel7.setText("This program Analyse and Import your Member Information.");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel7)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7)
        );

        jPanel4.setBackground(new java.awt.Color(51, 153, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        messagesTextArea.setColumns(20);
        messagesTextArea.setRows(5);
        jScrollPane1.setViewportView(messagesTextArea);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        cboCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboCompanyActionPerformed(evt);
            }
        });

        cboSelectBranch.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Choose Branch --" }));
        cboSelectBranch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSelectBranchActionPerformed(evt);
            }
        });

        lblSelectBranch.setText("Select Branch");

        lblSelectCompany.setText("Select Company");

        lblInseptionDate.setText("Inseption Date ");

        jXIDatePicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXIDatePickerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(lblSelectCompany)
                        .addGap(18, 18, 18)
                        .addComponent(cboCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(lblSelectBranch, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboSelectBranch, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(lblInseptionDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jXIDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSelectCompany)
                    .addComponent(cboCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSelectBranch)
                    .addComponent(cboSelectBranch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInseptionDate)
                    .addComponent(jXIDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cboSelectBranch.getAccessibleContext().setAccessibleName("Select Branch");
        cboSelectBranch.getAccessibleContext().setAccessibleParent(cboSelectBranch);
        lblInseptionDate.getAccessibleContext().setAccessibleDescription("");

        jPanel6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnRun.setText("Import Now");
        btnRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRunActionPerformed(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton3.setText("FAULT REPORT");
        jButton3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btnCSVfile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/csv.gif"))); // NOI18N
        btnCSVfile.setText("CSV");
        btnCSVfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCSVfileActionPerformed(evt);
            }
        });

        btnPDFfile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pdf.jpg"))); // NOI18N
        btnPDFfile.setText("PDF ");
        btnPDFfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPDFfileActionPerformed(evt);
            }
        });

        jButton8.setText("Settings");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnPDFfile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCSVfile)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(18, 18, 18)
                .addComponent(jButton8)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCSVfile, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPDFfile, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRun, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(btnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRun, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnClose))
                .addGap(18, 18, 18)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblServerConnect.setText("Select type of Server where you want to Import data :");

        cboServer_to_Connect.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Choose One --" }));
        cboServer_to_Connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboServer_to_ConnectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblServerConnect)
                .addGap(18, 18, 18)
                .addComponent(cboServer_to_Connect, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblServerConnect)
                    .addComponent(cboServer_to_Connect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setText("The file belongs to ");

        btnCash.setText("Cash ");
        btnCash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCashActionPerformed(evt);
            }
        });

        btnDebit.setText("Debit ");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(btnCash)
                .addGap(18, 18, 18)
                .addComponent(btnDebit)
                .addGap(21, 21, 21))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(btnCash)
                    .addComponent(btnDebit))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnViewDataInTables.setText("View Data");
        btnViewDataInTables.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDataInTablesActionPerformed(evt);
            }
        });

        btnReportHistory.setText("History");
        btnReportHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportHistoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(btnReportHistory)
                .addGap(18, 18, 18)
                .addComponent(btnViewDataInTables)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnViewDataInTables, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnReportHistory))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblLiveReport.setText("Live Report");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblLiveReport))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(lblLiveReport)
                .addGap(1, 1, 1)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed

        if (Holder.doaAalyse != null) {

            Holder.doaAalyse.cancel(true);

        }

        Holder.appMain.dispose();

        Holder.appMain = new Application();
        Holder.appMain.setVisible(true);
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
      //  Holder.appMain.setSize(599, screenSize.height);

        Holder.appMain.setResizable(false);


    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRunActionPerformed
        if (!(readDBInfo().equals("null"))) {
            // now Holder.rdbInfo gets all the essential information that are read from the files such as localhost.txt ,server.txt, testserver.txt, remote.txt etc.
            Holder.rdbInfo = readDBInfo().split(":RDB:");
            setUser(Holder.rdbInfo[1].toString());
            setPass(Holder.rdbInfo[2].toString());
            //setPass(txtPw.getPassword());
            setUrl("jdbc:mysql://"
                    + Holder.rdbInfo[0].toString()
                    + ":" + Holder.rdbInfo[4].toString() + "/");
            //Ip address or Location read from the files such as localhost.txt ,server.txt, testserver.txt, remote.txt , this is set as location on title bar.
            setTitle("Assist Import Version: " + Holder.vers + "Loc: " + Holder.rdbInfo[0].toString());
            setSchema(Holder.rdbInfo[3].toString());

            if (Application.txtSelectFile.getText().isEmpty()) {
                showMessageDialog(null, "Select File to Import", "Select File to Import", 1);
                return;
            }
            if (Application.cboSelectBranch.getSelectedItem().toString().isEmpty() || "--Choose Branch --".equals(Application.cboSelectBranch.getSelectedItem().toString())) {
                showMessageDialog(null, "Please Select Branch", "Please Select Branch".toString(), 1);
                return;

            }
            if (Application.jXIDatePicker.getDate() == null) {
                showMessageDialog(null, "Please Select Inseption Date", "Please Select Inseption Date".toString(), 1);
                return;

            }

            Holder.branchInfo = Application.cboSelectBranch.getSelectedItem().toString().split("::");
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            importNow();
            setCursor(Cursor.getDefaultCursor());

        }
    }//GEN-LAST:event_btnRunActionPerformed

    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
        // TODO add your handling code here:
        Holder.jFileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "CSV files only", "CSV");
        Holder.jFileChooser.setFileFilter(filter);
        int returnVal = Holder.jFileChooser.showOpenDialog(Holder.jFileChooser);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            //Check whether the selected one is a file
            //I have to make more modification here
            if (Holder.jFileChooser.getSelectedFile().isFile()) {
                Holder.path_of_CSVfile = Holder.jFileChooser.getSelectedFile();
                txtSelectFile.setText(Holder.path_of_CSVfile.toString());
                if ("Riskfin Cash Underwrter_Export.csv".equals(Holder.path_of_CSVfile.getName().toString())) {
                    btnCash.setEnabled(true);
                    Holder.TransactionType = "CASH";
                    btnCash.setBackground(Color.green);
                    btnDebit.setEnabled(false);
                }
                if ("Riskfin D_O Retail_Export.csv".equals(Holder.path_of_CSVfile.getName().toString())) {
                    Holder.TransactionType = "DEBIT";
                    btnCash.setEnabled(false);
                    btnDebit.setEnabled(true);
                    btnDebit.setBackground(Color.green);
                }
                System.out.println(Holder.jFileChooser.getSelectedFile());

            } else {
                showMessageDialog(this, "Please Select a CSV File.", "Select File Type", 1);
                Holder.path_of_CSVfile = null;
            }
            //   Holder.path_of_CSVfile = Paths.get(folderPath.toString(), jFileChooser.getSelectedFile());
            // jFileChooser.getSelectedFile().getName());
        }


    }//GEN-LAST:event_btnBrowseActionPerformed

    private void txtSelectFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSelectFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSelectFileActionPerformed

    private void cboCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboCompanyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboCompanyActionPerformed

    private void cboServer_to_ConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboServer_to_ConnectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboServer_to_ConnectActionPerformed

    private void btnCashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCashActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCashActionPerformed

    private void btnPDFfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPDFfileActionPerformed
        // TODO add your handling code here:
        File file = new File(Holder.FILE);
        if (file.toString().endsWith(".pdf")) {
            try {
                Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + file);
            } catch (IOException ex) {
                Logger.getLogger(Application.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            Desktop desktop = Desktop.getDesktop();
            try {
                desktop.open(file);
            } catch (IOException ex) {
                Logger.getLogger(Application.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnPDFfileActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Settings dialog = new Settings(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        // System.exit(0);
                        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
                    }
                });
                dialog.setVisible(true);

            }
        });
    }//GEN-LAST:event_jButton8ActionPerformed

    private void btnCSVfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCSVfileActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        File file = new File(Holder.csvFILE);
        if (file.toString().endsWith(".csv")) {
            try {
                Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + file);
            } catch (IOException ex) {
                Logger.getLogger(Application.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            Desktop desktop = Desktop.getDesktop();
            try {
                desktop.open(file);
            } catch (IOException ex) {
                Logger.getLogger(Application.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnCSVfileActionPerformed

    private void cboSelectBranchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSelectBranchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboSelectBranchActionPerformed

    private void btnViewDataInTablesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDataInTablesActionPerformed
        // TODO add your handling code here:

        //fetching the original data
        FileWriter fWriter = null;
        BufferedReader br = null;
        String CurrentLine = null;
        try {
            if (Holder.path_of_CSVfile == null) {
                showMessageDialog(null, "Please Select File", "Select File to Continue", 1);
                return;
            }
            br = new BufferedReader(new FileReader(Holder.path_of_CSVfile));
        } catch (FileNotFoundException ex) {
            showMessageDialog(null, ex, ex.toString(), 1);
            Logger.getLogger(Application.class.getName()).log(Level.SEVERE, null, ex);
        }
        String[] columns = null;
        try {
            columns = br.readLine().replace("\"", "").split(",");
        } catch (IOException ex) {
            Logger.getLogger(Application.class.getName()).log(Level.SEVERE, null, ex);
        }

        String[][] strData = new String[1000][columns.length];
        int i = 0, CurrLine = 0, membersCount = 0;
        int flag = 0;
        String MemNo = "";

        try {

            while ((CurrentLine = br.readLine()) != null) {
                CurrentLine = CurrentLine.replace("\"", "");
                if (CurrentLine.length() > 1) {
                    strData[i] = CurrentLine.split(",");

                }

                i++;

            }
        } catch (IOException ex) {
            Logger.getLogger(Application.class.getName()).log(Level.SEVERE, null, ex);
        }

        final int rows = 11;

        JPanel gui = new JPanel(new BorderLayout(3, 3));

        final JTable table = new JTable(
                new DefaultTableModel(strData, columns));

        final JScrollPane scrollPane = new JScrollPane(
                table,
                JScrollPane.VERTICAL_SCROLLBAR_NEVER,
                JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        Dimension d = table.getPreferredSize();
        scrollPane.setPreferredSize(
                new Dimension(d.width, table.getRowHeight() * rows));

        JPanel navigation = new JPanel(
                new FlowLayout(FlowLayout.CENTER));
        JButton next = new JButton("Next");
        next.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent ae) {
                int height = table.getRowHeight() * (rows - 1);
                JScrollBar bar = scrollPane.getVerticalScrollBar();
                bar.setValue(bar.getValue() + height);
            }
        });
        JButton previous = new JButton("Previous");
        previous.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent ae) {
                int height = table.getRowHeight() * (rows - 1);
                JScrollBar bar = scrollPane.getVerticalScrollBar();
                bar.setValue(bar.getValue() - height);
            }
        });

        navigation.add(previous);
        navigation.add(next);

        gui.add(scrollPane, BorderLayout.CENTER);
        //  gui.add(navigation, BorderLayout.SOUTH);

        JFrame frame = new JFrame();

        final JScrollPane scrollPaneNew = new JScrollPane(
                gui,
                JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,
                JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
        scrollPaneNew.setPreferredSize(
                new Dimension(200, 300));
        JPanel jp = new JPanel();
        jp.setLayout(new BorderLayout(10, 10));
        jp.add(scrollPaneNew, BorderLayout.NORTH);
        jp.add(navigation, BorderLayout.SOUTH);
        frame.add(jp);
        frame.setSize(400, 400);
        frame.setVisible(true);
        frame.setLocationRelativeTo(this);

             //   JOptionPane.showMessageDialog(null, gui);

    }//GEN-LAST:event_btnViewDataInTablesActionPerformed

    private void jXIDatePickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXIDatePickerActionPerformed
        // TODO add your handling code here:
        showMessageDialog(this, jXIDatePicker.getDate(), jXIDatePicker.getDate().toString(), 1);
    }//GEN-LAST:event_jXIDatePickerActionPerformed

    private void btnReportHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportHistoryActionPerformed

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReportHistory().setVisible(true);

            }
        });
    }//GEN-LAST:event_btnReportHistoryActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        File file = new File(Holder.FaultReportFile);
        if (file.toString().endsWith(".pdf")) {
            try {
                Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + file);
            } catch (IOException ex) {
                Logger.getLogger(Application.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            Desktop desktop = Desktop.getDesktop();
            try {
                desktop.open(file);
            } catch (IOException ex) {
                Logger.getLogger(Application.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Application().setVisible(true);
//            }
//        });
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowse;
    private javax.swing.JButton btnCSVfile;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnCash;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDebit;
    private javax.swing.JButton btnPDFfile;
    private javax.swing.JButton btnReportHistory;
    private javax.swing.JButton btnRun;
    public static javax.swing.JButton btnViewDataInTables;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cboCompany;
    public static javax.swing.JComboBox cboSelectBranch;
    private javax.swing.JComboBox cboServer_to_Connect;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    public static org.jdesktop.swingx.JXDatePicker jXIDatePicker;
    private javax.swing.JLabel lblInseptionDate;
    private javax.swing.JLabel lblLiveReport;
    private javax.swing.JLabel lblSelectBranch;
    private javax.swing.JLabel lblSelectCompany;
    private javax.swing.JLabel lblSelectFile;
    private javax.swing.JLabel lblServerConnect;
    private static javax.swing.JTextArea messagesTextArea;
    private javax.swing.JProgressBar searchProgressBar;
    public static javax.swing.JTextField txtSelectFile;
    // End of variables declaration//GEN-END:variables

    private void importNow() {

        getMessagesTextArea().setText("Verifying and Importing Member data... \n");
        Holder.doaAalyse = new DoAnalyse(getMessagesTextArea());
        Holder.doaAalyse.addPropertyChangeListener(new PropertyChangeListener() {
            @Override
            public void propertyChange(final PropertyChangeEvent event) {
                switch (event.getPropertyName()) {
                    case "progress":
                        searchProgressBar.setIndeterminate(false);
                        searchProgressBar.setValue((Integer) event.getNewValue());
                        break;
                    case "state":
                        switch ((StateValue) event.getNewValue()) {
                            case DONE:
                                //searchProgressBar.setVisible(false);
                                //searchCancelAction.putValue(Action.NAME, "Search");
                                Holder.doaAalyse = null;
                                break;
                            case STARTED:
                            case PENDING:
                                //searchCancelAction.putValue(Action.NAME, "Cancel");
                                searchProgressBar.setVisible(true);
                                searchProgressBar.setIndeterminate(true);
                                break;
                        }
                        break;
                }
            }
        });
        Holder.doaAalyse.execute();
    }
    
    /*
    * This is to initialize necessary folders that we want to connect to
    */
    public void  init_makeFolders()
    {
        File file;
        file = new File("C:\\Reports");
	if (!file.exists()) {
		if (file.mkdir()) {
                    new File("C:\\Reports\\PDF\\").mkdir();
                    new File("C:\\Reports\\CSV\\").mkdir();
                     new File("C:\\Reports\\FALT\\").mkdir();
			System.out.println("Directory is created!");
                     
                            
		} else {
			System.out.println("Failed to create directory!");
		}
	}
    }

    /*
     *  Initialize validity of Heder format to false
     */
    public void init_validity_of_header() {
        //  jButton6.setText("Validating ...");
    }
    /*
     * Initialize the type of file , which ca be cash or debit
     */

    public void init_type_of_File() {
        btnCash.setEnabled(false);
        btnDebit.setEnabled(false);
    }

    /**
     * @return the string containing the information related to
     * URL,Holder.user,Holder.password,port
     */
    public String readDBInfo() {
        String rowData = "";

        String File_Location_name = (String) cboServer_to_Connect.getSelectedItem();
        if (File_Location_name.isEmpty() || File_Location_name.equals("--Choose One --")) {
            showMessageDialog(this, "Please Select a server you want to connect to.", "Select Server Type", 1);
            rowData = "null";
            return rowData;
        }

        String CurrentLine;
        BufferedReader br = null;

        FileWriter fWriter = null;
        BufferedWriter writer = null;
        try {
            br = new BufferedReader(new FileReader(Holder.ServerConnectFolderName + File_Location_name + ".txt"));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Application.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            while ((CurrentLine = br.readLine()) != null) {
                rowData += CurrentLine + ":RDB:";
            }
        } catch (IOException ex) {
            Logger.getLogger(Application.class.getName()).log(Level.SEVERE, null, ex);
        }

        return rowData;
    }

    /*
    
     * Displays a dialogue box
     */
    public static void displayDialogueBox(String[] infoMessage, String titleBar) {
        JOptionPane.showMessageDialog(null, infoMessage, "InfoBox: " + titleBar, JOptionPane.INFORMATION_MESSAGE);
    }
    /*
    
     * This function is used to initialize combobox which is used to select Server location we want to connect to.
    
     */

    public void init_Combo_with_Server_Details() {

        final File folder = new File(Holder.ServerConnectFolderName);

        for (final File fileEntry : folder.listFiles()) {
            String fileNameWithExt = fileEntry.getName();
            String fileNameWithoutExt = "";
            int posofDot = fileNameWithExt.lastIndexOf(".");

            // Otherwise return the string, up to the dot.
            fileNameWithoutExt = fileNameWithExt.substring(0, posofDot);
            cboServer_to_Connect.addItem(fileNameWithoutExt);

            System.out.println(fileNameWithoutExt);

        }
        // set  default server connect type
        cboServer_to_Connect.setSelectedIndex(1);

    }

    /*
    
     */
    public void init_DataBase() {
        if (!(readDBInfo().equals("null"))) {
            // now Holder.rdbInfo gets all the essential information that are read from the files such as localhost.txt ,server.txt, testserver.txt, remote.txt etc.
            Holder.rdbInfo = readDBInfo().split(":RDB:");
            setUser(Holder.rdbInfo[1].toString());
            setPass(Holder.rdbInfo[2].toString());
            //setPass(txtPw.getPassword());
            setUrl("jdbc:mysql://"
                    + Holder.rdbInfo[0].toString()
                    + ":" + Holder.rdbInfo[4].toString() + "/");
            //Ip address or Location read from the files such as localhost.txt ,server.txt, testserver.txt, remote.txt , this is set as location on title bar.
            setTitle("Assist Import Version: " + Holder.vers + "Loc: " + Holder.rdbInfo[0].toString());
            setSchema(Holder.rdbInfo[3].toString());
            // setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            //  importNow();
            //setCursor(Cursor.getDefaultCursor());
        }
    }
    /*
            
     */

    public void init_Combo_with_Group_Details() {

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Holder.conn = DriverManager.getConnection("jdbc:mysql://localhost/riskfin", Holder.user, Holder.pass);

            Holder.stmt = Holder.conn.createStatement();
        } catch (ClassNotFoundException | SQLException e) {
            showMessageDialog(null, e, e.toString(), 1);
        }

        try {
            String sql = "SELECT * FROM group_db";
            //STEP 5: Extract data from result set
            try (ResultSet rs = Holder.stmt.executeQuery(sql)) {
                //STEP 5: Extract data from result set
                while (rs.next()) {
                    //Retrieve by column name

                    String GroupName = rs.getInt("Nr") + "::" + rs.getString("GroupName");
                    cboSelectBranch.addItem(GroupName);

                }
            }
        } catch (Exception e) {

        }

    }

    /**
     * @return the messagesTextArea
     */
    public static JTextArea getMessagesTextArea() {
        return messagesTextArea;
    }

    /**
     * @param messagesTextArea the messagesTextArea to set
     */
    public void setMessagesTextArea(JTextArea messagesTextArea) {
        this.messagesTextArea = messagesTextArea;
        // this.messageTextArea=messagesTextArea;
    }

    /**
     * @return the Holder.url
     */
    public static String getUrl() {
        return Holder.url;
    }

    /**
     * @param aUrl the Holder.url to set
     */
    public static void setUrl(String aUrl) {
        Holder.url = aUrl;
    }

    /**
     * @return the txtSchema
     */
    public static String getSchema() {
        return Holder.schema;
    }

    /**
     * @param txtSchema the txtSchema to set
     */
    public void setSchema(String txtSchema) {
        Holder.schema = txtSchema;
    }

    /**
     * @return the Holder.user
     */
    public static String getUser() {
        return Holder.user;
    }

    /**
     * @param aUser the Holder.user to set
     */
    public static void setUser(String aUser) {
        Holder.user = aUser;
    }

    /**
     * @return the Holder.pass
     */
    public static String getPass() {
        return Holder.pass;
    }

    /**
     * @param aPass the Holder.pass to set
     */
    public static void setPass(String aPass) {
        Holder.pass = aPass;
    }
}
